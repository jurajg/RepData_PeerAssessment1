#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=NULL)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
mySecret <- '1980067f9629c3a835780e1bcfbf7282a55606f5'
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
?sign_oauth1.0
?config
?sign_oauth1.0
sign_oauth1.0(myapp, token ="9d7855eb38dcc747bde2" , token_secret =mySecret)
demo("oauth2-github", package = "httr", ask = FALSE)
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
mySecret <- '1980067f9629c3a835780e1bcfbf7282a55606f5'
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
install.packages("jsonlite")
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
mySecret <- '1980067f9629c3a835780e1bcfbf7282a55606f5'
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
mySecret <- '1980067f9629c3a835780e1bcfbf7282a55606f5'
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
mySecret <- '1980067f9629c3a835780e1bcfbf7282a55606f5'
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
#req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
req <- with_config(gtoken, GET("https://api.github.com/repos/jtleek/datasharing"))
stop_for_status(req)
content(req)
c$created_at
library(httr)
# 1. Find OAuth settings for github:
# http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
# Insert your values below - if secret is omitted, it will look it up in
# the GITHUB_CONSUMER_SECRET environmental variable.
#
# Use http://localhost:1410 as the callback url
mySecret <- '1980067f9629c3a835780e1bcfbf7282a55606f5'
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("github", "9d7855eb38dcc747bde2", secret=mySecret)
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
#req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
req <- with_config(gtoken, GET("https://api.github.com/repos/jtleek/datasharing"))
stop_for_status(req)
ccc<-content(req)
ccc$created_at
downdata <- function (fileUrl="", destfile="")
{
#if (!file.exists("data")) {
#  dir.create("data")
#}
#fileUrl <- ""
download.file(fileUrl, destfile)
dateDownloaded <- date()
print(dateDownloaded)
}
getacs <- function()
{
datafname = "Fss06pid.csv"
downdata("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ",
datafname)
d <- read.table(datafname, sep=",", header=TRUE)
}
getacs()
d
getacs()
getacs <- function()
{
datafname = "Fss06pid.csv"
#downdata("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
#         datafname)
d <- read.table(datafname, sep=",", header=TRUE)
d
}
getacs()
sqldf("select * from acs where AGEP < 50 and pwgtp1")
library('sqldf')
getq2 <- function()
{
library('sqldf');
sqldf("select * from acs where AGEP < 50 and pwgtp1")
}
getq2()
acs = getacs()
getq2()
head(getq2()$AGEP)
downdata <- function (fileUrl="", destfile="")
getq2 <- function()
{
acs <- getacs();
library('sqldf');
sqldf("select pwgtp1 from acs where AGEP < 50")
}
getq2()
getq2 <- function()
{
acs <- getacs();
library('sqldf');
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
}
getq2()
sqldf("select distinct AGEP from acs")
?nchar
getq4()
qetq4 <- function()
{
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
html
}
getq4()
getq4 <- function()
{
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
html
}
getq4()
library("CURL");
library("CUrl");
library("RCUrl");
library("RCurl");
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
html
}
getq4()
print(')')
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows = strsplit(html, split='\n');
print(rows[10-1])
print(rows[20-1])
print(rows[30-1])
print(rows[100-1])
}
getq4()
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows = strsplit(html, split='\n')
}
getq4()
rows
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows = strsplit(html, split='\n')
rows
}
rows
rows <- getq4()
rows
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows <- strsplit(html, split='\n')
print(rows[10])
print(rows[20])
print(rows[30])
print(rows[100])
}
getq4()
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows <- strsplit(html, split='\n')
print(rows[10])
print(rows[20])
print(rows[30])
print(rows[100])
rows
}
rows <- getq4()
rows
rows[1]
rows[2]
class(rows)
rows$1
rows[1]
rows[2]
rows[1][1]
rows[1][1][1]
rows[1]$1
class(rows[1])
class(rows[2])
rows[2]
?strsplit
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows <- unlist(strsplit(html, split='\n'))
print(rows[10])
print(rows[20])
print(rows[30])
print(rows[100])
rows
}
rows <- getq4()
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows <- unlist(strsplit(html, split='\n'))
print(nchars(rows[10]))
print(nchars(rows[20]))
print(nchars(rows[30]))
print(nchars(rows[100])
rows
}
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows <- unlist(strsplit(html, split='\n'))
print(nchars(rows[10]))
print(nchars(rows[20]))
print(nchars(rows[30]))
print(nchars(rows[100]))
rows
}
rows <- getq4()
getq4 <- function()
{
library("RCurl");
url <- "http://biostat.jhsph.edu/~jleek/contact.html";
html <- getURL(url);
rows <- unlist(strsplit(html, split='\n'))
print(nchar(rows[10]))
print(nchar(rows[20]))
print(nchar(rows[30]))
print(nchar(rows[100]))
rows
}
rows <- getq4()
getwd()
getq5 <- function()
{
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for";
fname <-"Fwksst8110.for";
downdata(url, fname);
widths = c(15, 8, 8, 8, 8)
d <- read.fwf(fname, widths, header=TRUE, sep='     ', skip=2)
d
}
d <- getq5()
getq5 <- function()
{
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for";
fname <-"Fwksst8110.for";
downdata(url, fname);
widths = c(15, 8, 8, 8, 8)
d <- read.fwf(fname, widths, header=TRUE, sep='     ', skip=2)
d
}
d <- getq5()
d <- getq5()
getwd()
getwd()
d <- getq5()
d <- getq5()
getq5 <- function()
{
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for";
fname <-"Fwksst8110.for";
downdata(url, fname);
widths = c(15, 8, 8, 8, 8)
d <- read.fwf(fname, widths, header=TRUE, sep=' ', skip=2)
d
}
d <- getq5()
getq5 <- function()
{
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for";
fname <-"Fwksst8110.for";
downdata(url, fname);
widths = c(15, 13, 13, 13, 8)
d <- read.fwf(fname, widths, header=TRUE, skip=2)
d
}
d <- getq5()
getq5 <- function()
{
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for";
fname <-"Fwksst8110.for";
downdata(url, fname);
widths = c(15, 13, 13, 13, 8)
d <- read.fwf(fname, widths, header=FALSE, skip=4)
d
}
d <- getq5()
head(d)
getq5 <- function()
{
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for";
fname <-"Fwksst8110.for";
downdata(url, fname);
widths = c(15, 13, 4, 9, 13, 8)
d <- read.fwf(fname, widths, header=FALSE, skip=4)
d
}
d <- getq5()
head(d)
head(d)$V1
head(d)$V2
head(d)$V3
d$V3
sum(d$V3)
library(lattice)
library(datasets)
xyplot( Ozone ~ Wind, data = airquality)
airquality2 <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~Wind | Month, data = airquality, layout = c(5,1))
library(nlme)
library(lattice)
xyplot(weight ~Time | Diet, BodyWeight)
head(BodyWeight)
BodyWeight
BodyWeight$Diet
?llines
?axis
?llines
?points
?lines
?points
?trellis.par
?trellis
?lattice.trellis
??trellis
??trellis
library(ggplot2)
qplot(displ, hwy, data=mpg)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = c("smooth","points"))
qplot(Wind, Ozone, data = airquality, geom = c("smooth","point"))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
?read.csv
fname <- 'activity.csv';
d <- read.csv(fname, header=TRUE, sep=',');
setwd("C:/Users/nio/courseragit/RepData_PeerAssessment1")
fname <- 'activity.csv';
d <- read.csv(fname, header=TRUE, sep=',');
head(d)
summary(d)
mean(d$steps)
?mean
mean(d$steps, na.rm=TRUE)
?split
split(d, date)
split(d, factor(date)
)
)d
d
class(d)
split(d, factor(d$date)
)
class(split(d, factor(d$date)))
head(split(d, factor(d$date)))
names(split(d, factor(d$date)))
class(split(d, factor(d$date)))
unlist(split(d, factor(d$date)))
class(unlist(split(d, factor(d$date))))
?unlist
(split(d, factor(d$date)))
split(d, factor(d$date))$'2012-11-30'
(split(d, factor(d$date))$'2012-11-30')$steps
mean(split(d, factor(d$date))$'2012-11-30')$steps
mean((split(d, factor(d$date))$'2012-11-30')$steps)
mean((split(d, factor(d$date))$'2012-11-30')$steps, rm.na=TRUE)
split(d, steps)
head(split(d, d$steps))
head(split(d, d$interval), 2)
mean(split(d, d$interval)))
mean(split(d, d$interval))
class(split(d, d$interval)))
class(split(d, d$interval))
class(unlist(split(d, d$interval))
)
sapply(split(d, d$interval), mean)
head(split(d, d$interval)
)
